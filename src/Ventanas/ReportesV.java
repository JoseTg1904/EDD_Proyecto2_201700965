/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author chepe
 */
public class ReportesV extends javax.swing.JFrame {

    /**
     * Creates new form ReportesV
     */
    public ReportesV() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaDeReporte = new javax.swing.JTextArea();
        jButton12 = new javax.swing.JButton();
        llaveBloque = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Grafo estructuras");

        jButton1.setText("Tabla Hash");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Arbol B");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Block chain");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Lista doble circular");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Grafo");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Lista de adyacencia");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("General");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel2.setText("Reportes top");

        jButton8.setText("Viajes mas largos");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("<html>Clientes con mayor<br> cantidad de viajes</html>");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("<html>Conductores que <br>generan<br>mas ingresos</html>");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("<html>Vehiculos con<br>con mas viajes</html>");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        areaDeReporte.setEditable(false);
        areaDeReporte.setColumns(20);
        areaDeReporte.setRows(5);
        jScrollPane1.setViewportView(areaDeReporte);

        jButton12.setText("Regresar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Buscar ruta");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jButton12)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(llaveBloque, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton13))
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(llaveBloque, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton13)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Seleccion seleccion = new Seleccion();
        seleccion.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            generarGrafoHash();
        } catch (IOException ex) {
            Logger.getLogger(ReportesV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
              try {
            generarGrafoArbolB();   
        } catch (IOException ex) {
            Logger.getLogger(ReportesV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            generarGrafoListaDobleCiruclar();
        } catch (IOException ex) {
            Logger.getLogger(ReportesV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            generarGrafoDelGrafo();
        } catch (IOException ex) {
            Logger.getLogger(ReportesV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            generarGrafoListaAdyacencia();
        } catch (IOException ex) {
            Logger.getLogger(ReportesV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            generarGrafoGeneral();
        } catch (IOException ex) {
            Logger.getLogger(ReportesV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            generarGrafoBlockChain();
        } catch (IOException ex) {
            Logger.getLogger(ReportesV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        topViajesMasLargos();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        topClientes();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        topConductores();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        topVehiculos();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        try {
            obtenerRuta();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(ReportesV.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportesV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportesV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportesV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportesV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportesV().setVisible(true);
            }
        });
    }
    
    private void obtenerRuta() throws NoSuchAlgorithmException{
        if(llaveBloque.getText().length() > 0){
        areaDeReporte.setText(Inicial.blockChain.devolverRuta(llaveBloque.getText().trim()));
        }else{
            JOptionPane.showMessageDialog(this,"Debe de llenar los campos necesarios");
        }
    }
    
    private void topViajesMasLargos(){
        areaDeReporte.setText(Inicial.blockChain.topViajesMasLargos());
    }
    
    private void topClientes(){
        areaDeReporte.setText(Inicial.blockChain.topClientes() );
    }
    
    private void topConductores(){
        areaDeReporte.setText(Inicial.blockChain.topConductores() );
    }
        
    private void topVehiculos(){
        areaDeReporte.setText(Inicial.blockChain.topVehiculos() );
    }
    
    private void generarGrafoBlockChain() throws IOException{
        String pathDot = "./Reportes/grafoBlockChain.dot", pathImagen = "./Reportes/grafoBlockChain.png";
        String contenido = Inicial.blockChain.grafoBlockChain();
        File archivo = new File(pathDot);
        if(!archivo.exists()){
            archivo.createNewFile();
        }
        PrintWriter pintor = new PrintWriter(archivo,"UTF-8");
        pintor.print(contenido);
        pintor.close();
        String comando = "dot -Tpng -o "+pathImagen+" "+pathDot;
        Runtime rt = Runtime.getRuntime();
        rt.exec(comando);
        VisualizacionV visualizacion = new VisualizacionV();
        visualizacion.setVisible(true);
        visualizacion.setearImagen(pathImagen);
    }
    
    private void generarGrafoGeneral() throws IOException{
        String pathDot = "./Reportes/grafoGeneral.dot", pathImagen = "./Reportes/grafoGeneral.png";
        String contenido = Inicial.blockChain.grafoTotalBlockChain();
        File archivo = new File(pathDot);
        if(!archivo.exists()){
            archivo.createNewFile();
        }
        PrintWriter pintor = new PrintWriter(archivo,"UTF-8");
        pintor.print(contenido);
        pintor.close();
        String comando = "dot -Tpng -o "+pathImagen+" "+pathDot;
        Runtime rt = Runtime.getRuntime();
        rt.exec(comando);
        VisualizacionV visualizacion = new VisualizacionV();
        visualizacion.setVisible(true);
        visualizacion.setearImagen(pathImagen);
    }
    
    private void generarGrafoListaAdyacencia() throws IOException{
        String pathDot = "./Reportes/grafoListaAdyacencia.dot", pathImagen = "./Reportes/grafoListaAdyacencia.png";
        String contenido = Inicial.grafo.grafoLista();
        File archivo = new File(pathDot);
        if(!archivo.exists()){
            archivo.createNewFile();
        }
        PrintWriter pintor = new PrintWriter(archivo,"UTF-8");
        pintor.print(contenido);
        pintor.close();
        String comando = "dot -Tpng -o "+pathImagen+" "+pathDot;
        Runtime rt = Runtime.getRuntime();
        rt.exec(comando);
        VisualizacionV visualizacion = new VisualizacionV();
        visualizacion.setVisible(true);
        visualizacion.setearImagen(pathImagen);
    }
    
    private void generarGrafoDelGrafo() throws IOException{
        String pathDot = "./Reportes/grafoGrafo.dot", pathImagen = "./Reportes/grafoGrafo.png";
        String contenido = Inicial.grafo.grafoTotal();
        File archivo = new File(pathDot);
        if(!archivo.exists()){
            archivo.createNewFile();
        }
        PrintWriter pintor = new PrintWriter(archivo,"UTF-8");
        pintor.print(contenido);
        pintor.close();
        String comando = "dot -Tpng -o "+pathImagen+" "+pathDot;
        Runtime rt = Runtime.getRuntime();
        rt.exec(comando);
        VisualizacionV visualizacion = new VisualizacionV();
        visualizacion.setVisible(true);
        visualizacion.setearImagen(pathImagen);
    }
    
    private void generarGrafoListaDobleCiruclar() throws IOException{
        String pathDot = "./Reportes/grafoListaDobleCircular.dot", pathImagen = "./Reportes/grafoListaDobleCircular.png";
        String contenido = Inicial.conductores.grafoListaDobleCircular();
        File archivo = new File(pathDot);
        if(!archivo.exists()){
            archivo.createNewFile();
        }
        PrintWriter pintor = new PrintWriter(archivo,"UTF-8");
        pintor.print(contenido);
        pintor.close();
        String comando = "dot -Tpng -o "+pathImagen+" "+pathDot;
        Runtime rt = Runtime.getRuntime();
        rt.exec(comando);
        VisualizacionV visualizacion = new VisualizacionV();
        visualizacion.setVisible(true);
        visualizacion.setearImagen(pathImagen);
    }
    
    private void generarGrafoArbolB() throws IOException{
        String pathDot = "./Reportes/grafoArbolB.dot", pathImagen = "./Reportes/grafoArbolB.png";
        String contenido = Inicial.vehiculos.devolverGrafo();
        File archivo = new File(pathDot);
        if(!archivo.exists()){
            archivo.createNewFile();
        }
        PrintWriter pintor = new PrintWriter(archivo,"UTF-8");
        pintor.print(contenido);
        pintor.close();
        String comando = "dot -Tpng -o "+pathImagen+" "+pathDot;
        Runtime rt = Runtime.getRuntime();
        rt.exec(comando);
        VisualizacionV visualizacion = new VisualizacionV();
        visualizacion.setVisible(true);
        visualizacion.setearImagen(pathImagen);
    }
    
    private void generarGrafoHash() throws IOException{
        String pathDot = "./Reportes/grafoHash.dot", pathImagen = "./Reportes/grafoHash.png";
        String contenido = Inicial.clientes.grafoHash();
        File archivo = new File(pathDot);
        if(!archivo.exists()){
            archivo.createNewFile();
        }
        PrintWriter pintor = new PrintWriter(archivo,"UTF-8");
        pintor.print(contenido);
        pintor.close();
        String comando = "dot -Tpng -o "+pathImagen+" "+pathDot;
        Runtime rt = Runtime.getRuntime();
        rt.exec(comando);
        VisualizacionV visualizacion = new VisualizacionV();
        visualizacion.setVisible(true);
        visualizacion.setearImagen(pathImagen);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaDeReporte;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField llaveBloque;
    // End of variables declaration//GEN-END:variables
}
